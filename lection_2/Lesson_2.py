list_1 = [] # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞.
list_2 = list() # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞.
list_3 = [1, 2, 3, 4, 5] # * –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫, —É–±—Ä–∞—Ç—å —Å–∫–æ–±–∫–∏, print(*list_3)

for i in list_3:
    print(i)
    
print(len(list_3)) # –î–ª–∏–Ω–∞ —Å–ø–∏—Å–∫–∞.

print(list_3[0]) # –í—ã–≤–æ–¥ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º 0.

print(list_3[-1]) # –í—ã–≤–æ–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ ( —Å –∫–æ–Ω—Ü–∞).

list_3.append(6) # –î–æ–±–∞–≤–∏—Ç—å —Ü–∏—Ñ—Ä—É 6 –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞.

list_4 = []
for i in range(5): # i –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 1 –¥–æ 4.
    list_4.append(i)  # –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ i-—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.
    print(list_4) 

# [0] - –ø—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞
# [0, 1]
# [0, 1, 2]      
# [0, 1, 2, 3]   
# [0, 1, 2, 3, 4]       

list_5 = [12, 7, -1, 21, 0] 
print(list_5.pop()) # —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞.
print(list_5) # [12, 7, -1, 21] 
print(list_5.pop(1)) # [12, -1, 21] —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.


list_5 = [12, 7, -1, 21, 0] 
print(list_5.insert(2, 11)) # –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç(2)- –Ω–æ–º–µ—Ä –∏–Ω–¥–µ–∫—Å–∞ —ç–ª–µ–º–µ–Ω—Ç–∞.
                            # –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç (11)- –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
print(list_5) # [12, 7, 11, -1, 21, 0]

list_6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(list_6[0])  # 1
print(list_6[1])  # 2
print(list_6[len(list_6) - 1])  # 10
print(list_6[-5])  # 6
print(list_6[:])  # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(list_6[:2])  # [1, 2]
print(list_6[len(list_6) - 2:])  # [9, 10]
print(list_6[2:9])  # [3, 4, 5, 6, 7, 8, 9]
print(list_6[6:-18])  # []
print(list_6[0:len(list_6):6])  # [1, 7]
print(list_6[::6])  # [1, 7]

t = () # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ –∫–æ—Ä—Ç–µ–∂–∞.

a, b = 1, 2 # –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ

# d = {} # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è
# d = dict() # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è
# d['q'] = 'qwerty'
# print(d) # {'q': 'qwerty'}

# d['w'] = 'werty' 
# print(d)  # {'q': 'qwerty', 'w': 'werty'}

# d['w'] = 'werty' 
# print(d['q'])  # qwerty

dictionary = {}
dictionary ={'up': '‚Üë', 'left': '‚Üê', 'down': '‚Üì', 'right': '‚Üí'}
print(dictionary) # {'up':'‚Üë', 'left':'‚Üê', 'down':'‚Üì', 'right':'‚Üí'}
print(dictionary['left']) # ‚Üê
# —Ç–∏–ø—ã –∫–ª—é—á–µ–π –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è
print(dictionary['up']) # ‚Üë
# —Ç–∏–ø—ã –∫–ª—é—á–µ–π –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è
dictionary['left'] = '‚áê'
print(dictionary['left']) # ‚áê
print(dictionary['type']) # KeyError: 'type'
del dictionary['left'] # —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
for item in dictionary: # for (k,v) in dictionary.items():
    print('{}: {}'.format(item, dictionary[item]))
    
    
# üí° –ú–Ω–æ–∂–µ—Å—Ç–≤–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç –≤ —Å–µ–±–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
# —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ.
# –û–¥–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ª—é–±—ã—Ö —Ç–∏–ø–æ–≤. –ï—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å –¥–≤–∞
# –º–Ω–æ–∂–µ—Å—Ç–≤–∞, –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∞—Ç—å –Ω–∞–¥ –Ω–∏–º–∏ –ª—é–±—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏,
# –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ, –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –∏ —Ä–∞–∑–Ω–æ—Å—Ç—å. –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º –∏—Ö.
colors = {'red', 'green', 'blue'}
print(colors) # {'red', 'green', 'blue'}
colors.add('red')
print(colors) # {'red', 'green', 'blue'}
colors.add('gray')
print(colors) # {'red', 'green', 'blue','gray'}
colors.remove('red')
print(colors) # {'green', 'blue','gray'}
colors.remove('red') # KeyError: 'red'
colors.discard('red') # ok
print(colors) # {'green', 'blue','gray'}
colors.clear() # { }
print(colors) # set() - c–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞.


# –û–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞–º–∏ –≤ Python
a = {1, 2, 3, 5, 8}
b = {2, 5, 8, 13, 21}
c = a.copy() # c = {1, 2, 3, 5, 8}
u = a.union(b) # u = {1, 2, 3, 5, 8, 13, 21}
i = a.intersection(b) # i = {8, 2, 5} - –ø–æ–∏—Å–∫ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
dl = a.difference(b) # dl = {1, 3} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∑–Ω–∞—á–µ–Ω–∏–π
dr = b.difference(a) # dr = {13, 21}
q = a.union(b).difference(a.intersection(b)) # {1, 21, 3, 13}

# –ù–µ–∏–∑–º–µ–Ω—è–µ–º–æ–µ –∏–ª–∏ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ(frozenset) ‚Äî –º–Ω–æ–∂–µ—Å—Ç–≤–æ, —Å –∫–æ—Ç–æ—Ä—ã–º
# –Ω–µ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –º–µ—Ç–æ–¥—ã —É–¥–∞–ª–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.
a = {1, 2, 3, 5, 8}
b = frozenset(a)
print(b) # frozenset({1, 2, 3, 5, 8})

# List Comprehension
# –£ –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –µ—Å—Ç—å —Å–≤–æ–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞. –û–¥–Ω–∞
# –∏–∑ –∫—É–ª—å—Ç–æ–≤—ã—Ö —Ñ–∏—à–µ–∫ Python ‚Äî list comprehension (—Ä–µ–¥–∫–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –Ω–∞ —Ä—É—Å—Å–∫–∏–π, –Ω–æ
# –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ ¬´–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å–ø–∏—Å–∫–∞¬ª). Comprehension –ª–µ–≥–∫–æ
# —á–∏—Ç–∞—Ç—å, –∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∫–∞–∫ –Ω–∞—á–∏–Ω–∞—é—â–∏–µ, —Ç–∞–∫ –∏ –æ–ø—ã—Ç–Ω—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏.
# List comprehension ‚Äî —ç—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å–ø–∏—Å–∫–∞, –∫–æ—Ç–æ—Ä—ã–π
# –∑–∞–¥–µ–π—Å—Ç–≤—É–µ—Ç —Ü–∏–∫–ª for, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ if-else –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ –≤ –∏—Ç–æ–≥–µ
# –æ–∫–∞–∂–µ—Ç—Å—è –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ  

# 1. –ü—Ä–æ—Å—Ç–∞—è —Å–∏—Ç—É–∞—Ü–∏—è ‚Äî —Å–ø–∏—Å–æ–∫:
list_1 = [exp for item in iterable]
# 2. –í—ã–±–æ—Ä–∫–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —É—Å–ª–æ–≤–∏—é:
list_1 = [exp for item in iterable (if conditional)]

# –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 100.
# –†–µ—à–µ–Ω–∏–µ:
# 1. –°–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 100
list_1 = []
for i in range(1, 101):
list_1.append(i)
print(list_1) # [1, 2, 3,..., 100]

# –≠—Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å —Ç–∞–∫:
list_1 = [i for i in range(1, 101)] # [1, 2, 3,..., 100]

# 2. –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª–æ–≤–∏–µ (—Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞)
list_1 = [i for i in range(1, 101) if i % 2 == 0] # [2, 4, 6,..., 100]

# –î–æ–ø—É—Å—Ç–∏–º, –≤—ã —Ä–µ—à–∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –ø–∞—Ä—ã –∫–∞–∂–¥–æ–º—É –∏–∑ —á–∏—Å–µ–ª (–∫–æ—Ä—Ç–µ–∂–∏)
list_1 = [(i, i) for i in range(1, 101) if i % 2 == 0] # [(2, 2), (4, 4),...,(100, 100)]

#–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ —É–º–Ω–æ–∂–∞—Ç—å, –¥–µ–ª–∏—Ç—å, –ø—Ä–∏–±–∞–≤–ª—è—Ç—å, –≤—ã—á–∏—Ç–∞—Ç—å. –ù–∞–ø—Ä–∏–º–µ—Ä, —É–º–Ω–æ–∂–∏—Ç—å
#–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 2.
list_1 = [i * 2 for i in range(10) if i % 2 == 0]
print(list_1) # [0, 4, 8, 12, 16]

# üî• –°–∞–º—ã–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:

 ‚óè SyntaxError(–°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞)
number_first = 5
number_second = 7
if number_first > number_second # !!!!!
print(number_first)
# –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ :

‚óè IndentationError(–û—à–∏–±–∫–∞ –æ—Ç—Å—Ç—É–ø–æ–≤)
number_first = 5
number_second = 7
if number_first > number_second:
print(number_first) # !!!!!
# –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—Ç—Å—Ç—É–ø–æ–≤

‚óè TypeError(–¢–∏–ø–æ–≤–∞—è –æ—à–∏–±–∫–∞)
text = 'Python'
number = 5
print(text + number)
# –ù–µ–ª—å–∑—è —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å —Å—Ç—Ä–æ–∫–∏ –∏ —á–∏—Å–ª–∞

‚óè ZeroDivisionError(–î–µ–ª–µ–Ω–∏–µ –Ω–∞ 0)
number_first = 5
number_second = 0
print(number_first // number_second)
# –î–µ–ª–∏—Ç—å –Ω–∞ 0 –Ω–µ–ª—å–∑—è

‚óè KeyError(–û—à–∏–±–∫–∞ –∫–ª—é—á–∞)
dictionary = {1: 'Monday', 2: 'Tuesday'}
print(dictionary[3])
# –¢–∞–∫–æ–≥–æ –∫–ª—é—á–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

‚óè NameError(–û—à–∏–±–∫–∞ –∏–º–µ–Ω–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π)
name = 'Ivan'
print(names)
# –ü–µ—Ä–µ–º–µ–Ω–Ω–æ–π names –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

‚óè ValueError(–û—à–∏–±–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è)
text = 'Python'
print(int(text))
# –ù–µ–ª—å–∑—è —Å–∏–º–≤–æ–ª—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ —Ü–µ–ª—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
